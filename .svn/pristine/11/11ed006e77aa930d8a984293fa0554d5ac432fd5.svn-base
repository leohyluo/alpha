package com.alpha.self.diagnosis.processor;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.stereotype.Component;

import com.alpha.commons.enums.BasicQuestionType;
import com.alpha.self.diagnosis.annotation.BasicAnswerProcessor;
import com.alpha.self.diagnosis.pojo.BasicAnswer;
import com.alpha.self.diagnosis.pojo.BasicQuestion;
import com.alpha.self.diagnosis.pojo.vo.BasicAnswerVo;
import com.alpha.self.diagnosis.pojo.vo.IAnswerVo;
import com.alpha.self.diagnosis.pojo.vo.LiverRenalAnswerVo;
import com.alpha.self.diagnosis.service.BasicAnswerService;
import com.alpha.server.rpc.user.pojo.UserInfo;
import static java.util.stream.Collectors.toList;

@BasicAnswerProcessor(enable = false)
@Component
public class LiverRenalProcessor extends AbstractBasicAnswerProcessor {

	private static final String QUESTION_CODE = BasicQuestionType.LIVER_RENAL.getValue();
	
	@Resource
	private BasicAnswerService basicAnswerService;
	
	@Override
	protected List<IAnswerVo> queryAnswers(BasicQuestion question, UserInfo userInfo) {
		List<IAnswerVo> answervoList = new ArrayList<>();
		List<BasicAnswer> answerList = basicAnswerService.findByQuestionCode(question.getQuestionCode());
		List<BasicAnswerVo> basicAnswervoList = answerList.stream().map(BasicAnswerVo::new).collect(toList());
		IAnswerVo answervo = new LiverRenalAnswerVo(basicAnswervoList, basicAnswervoList);
		answervoList.add(answervo);
		return answervoList;
	}
	
	@Override
	protected String setQuestionCode() {
		return QUESTION_CODE;
	}

}
