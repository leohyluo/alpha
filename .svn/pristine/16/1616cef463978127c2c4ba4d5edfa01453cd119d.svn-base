package com.alpha.self.diagnosis.service.impl;

import com.alpha.commons.core.sql.DataSet;
import com.alpha.self.diagnosis.dao.DiagnosisMainSymptomsDao;
import com.alpha.self.diagnosis.mapper.BasicAnswerMapper;
import com.alpha.self.diagnosis.pojo.BasicAnswer;
import com.alpha.self.diagnosis.pojo.vo.BasicAnswerVo;
import com.alpha.self.diagnosis.pojo.vo.BasicQuestionVo;
import com.alpha.self.diagnosis.service.MedicineQuestionService;
import com.alpha.server.rpc.diagnosis.pojo.DiagnosisMainSymptoms;
import com.alpha.server.rpc.user.pojo.UserInfo;
import org.springframework.stereotype.Service;

import javax.annotation.Resource;
import java.util.ArrayList;
import java.util.List;

/**
 * Created by xc.xiong on 2017/9/6.
 */
@Service
public class MedicineQuestionServiceImpl implements MedicineQuestionService {

    @Resource
    DiagnosisMainSymptomsDao diagnosisMainSymptomsDao;

    /**
     * 生成主症状问题
     * 获取主症状数据
     * @return
     */
    public BasicQuestionVo mainSymptomsQuestion(Long questionId){

        DataSet<DiagnosisMainSymptoms> dmsDateSet = diagnosisMainSymptomsDao.selectLimit(1, 1000);
        List<DiagnosisMainSymptoms> dmses = dmsDateSet.getRows();
        BasicQuestionVo questionVo = new BasicQuestionVo();
        List<BasicAnswerVo> basicAnswers = new ArrayList<>();
        for(DiagnosisMainSymptoms dms:dmses){
            BasicAnswerVo basicAnswer = new BasicAnswerVo();
            basicAnswer.setAnswerCode(dms.getSympCode());
            basicAnswer.setAnswerTitle(dms.getSympName());
            basicAnswer.setDefaultOrder(dms.getDefaultOrder());
            basicAnswer.setDescription(dms.getPopuName());
            basicAnswers.add(basicAnswer);
        }
        questionVo.setAnswers(basicAnswers);
        questionVo.setQuestionTitle("【xxx】的基本情况我已经清楚了解，现在告诉我最不舒服的是什么，我将调动全身的每一个细胞进行运算！");
        questionVo.setQuestionId("2000");
        questionVo.setDiagnosisId(questionId);
        questionVo.setDisplayType("radio");
        return questionVo;
    }


    public BasicQuestionVo question(Long questionId,BasicQuestionVo questionVo,UserInfo userInfo){
        if(questionVo==null)
            return mainSymptomsQuestion(questionId);

        return null;
    }

}
