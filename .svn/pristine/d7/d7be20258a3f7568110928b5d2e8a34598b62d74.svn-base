package com.alpha.user.controller;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;

import com.alibaba.fastjson.JSON;
import com.alpha.commons.web.ResponseStatus;
import com.alpha.server.rpc.user.pojo.UserInfo;
import com.alpha.user.service.UserInfoService;
import org.apache.commons.lang.StringUtils;
import org.codehaus.jackson.map.ObjectMapper;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.alpha.commons.web.ResponseMessage;

@RestController
@RequestMapping("/user")
public class UserController {

	private static final Logger LOGGER = LoggerFactory.getLogger(UserController.class);
	
	@Resource
	private UserInfoService userInfoService;

	/**
	 * 问诊前授权信息，目前没有做限制，只要有userinfo.externalUserId 都能授权成功
	 * @param userInfo
	 * @param inType
	 * @param isself 是否本人问诊
	 * @return 返回问诊信息，用户编号，用户对象
	 */
	@PostMapping("/auth")
	public ResponseMessage authorization(String userInfo, Integer inType, Integer isself){

		LOGGER.info("为用户授权，获取用户信息，渠道编号: {} ,{}",inType, userInfo);
		try {
			if (inType == null || inType == 0 || userInfo == null) {
				return new ResponseMessage(ResponseStatus.INVALID_VALUE.code(), "授权信息不完整,服务器已拒绝");
			}
			ObjectMapper mapper = new ObjectMapper();
			UserInfo user = mapper.readValue("{\"userId\":123,\"externalUserId\":\"8a3e91a2-d8e6-4270-a9a7-0e4c794b59d6\"}", UserInfo.class);
//			UserInfo user = (UserInfo) JSON.parse(userInfo);
			if ( StringUtils.isEmpty(user.getExternalUserId())) {
				return new ResponseMessage(ResponseStatus.INVALID_VALUE.code(), "授权信息不完整,服务器已拒绝");
			}
			//获取用户信息
			//如果存在用户信息，返回用户信息
			//如果不存在，生成一个临时的用户，返回UserId
			user = userInfoService.updateUserInfo(user, inType);
			return new ResponseMessage(user);
		}catch (Exception e){
			e.printStackTrace();
			return new ResponseMessage(ResponseStatus.EXCEPTION);
		}
	}
}
