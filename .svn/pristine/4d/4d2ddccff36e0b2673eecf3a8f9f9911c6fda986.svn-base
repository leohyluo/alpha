package com.alpha.self.diagnosis.processor;

import java.util.List;
import java.util.stream.Collectors;
import java.util.stream.Stream;

import javax.annotation.Resource;

import org.springframework.stereotype.Component;

import com.alpha.commons.enums.BasicQuestionType;
import com.alpha.self.diagnosis.annotation.BasicAnswerProcessor;
import com.alpha.self.diagnosis.pojo.BasicAnswer;
import com.alpha.self.diagnosis.pojo.BasicQuestion;
import com.alpha.self.diagnosis.pojo.vo.BasicAnswerVo;
import com.alpha.self.diagnosis.service.BasicAnswerService;
import com.alpha.server.rpc.user.pojo.UserInfo;

@BasicAnswerProcessor
@Component
public class NormalAnswerProcessor extends AbstractBasicAnswerProcessor {
	
	private static final String QUESTION_CODE[] = {
			BasicQuestionType.BOY_OR_GIRL.getValue(),
			BasicQuestionType.MAN_OR_WOMAN.getValue(), BasicQuestionType.MENSTRUAL_PERIOD.getValue(),
			BasicQuestionType.SPECIAL_PERIOD.getValue(),BasicQuestionType.FERTILITY_TYPE.getValue(),
			BasicQuestionType.GESTATIONAL_AGE.getValue(), BasicQuestionType.FEED_TYPE.getValue()
	};
	
	@Resource
	private BasicAnswerService basicAnswerService;

	@Override
	protected List<BasicAnswerVo> queryAnswers(BasicQuestion question, UserInfo userInfo) {
		List<BasicAnswer> answerList = basicAnswerService.findByQuestionCode(question.getQuestionCode());
		return answerList.stream().map(BasicAnswerVo::new).collect(Collectors.toList());
	}

	@Override
	protected String setQuestionCode() {
		String questionCode = Stream.of(QUESTION_CODE).collect(Collectors.joining(","));
		return questionCode;
	}

}
