package com.alpha.self.diagnosis.controller;

import com.alibaba.fastjson.JSON;
import com.alpha.commons.web.ResponseStatus;
import com.alpha.user.pojo.UserInfo;
import org.apache.commons.lang.StringUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import com.alpha.commons.web.ResponseMessage;


/**
 * Created by xc.xiong on 2017/9/1.
 * 第三方问诊授权
 */
@RestController
@RequestMapping("/auth")
public class AuthorizationController {

    private static final Logger LOGGER = LoggerFactory.getLogger(AuthorizationController.class);

    /**
     * 问诊前授权信息，目前没有做限制，只要有userinfo.externalUserId 都能授权成功
     * @param userInfo
     * @param inType
     * @param isself 是否本人问诊
     * @return 返回问诊信息，用户编号，用户对象
     */
    @RequestMapping("/diagnosis")
    public ResponseMessage Authorization(UserInfo userInfo,Integer inType,Integer isself){
        LOGGER.info("为用户授权，获取用户信息，渠道编号 {} {}",inType, JSON.toJSONString(userInfo));
        if(inType==null||inType==0||userInfo==null|| StringUtils.isEmpty(userInfo.getExternalUserId())){
            return new ResponseMessage(ResponseStatus.INVALID_VALUE.code(),"授权信息不完整,服务器已拒绝");
        }
        //获取用户信息
        //如果存在用户信息，返回用户信息
        //如果不存在，生成一个临时的用户，返回UserId


        return new ResponseMessage(userInfo);
    }
}
